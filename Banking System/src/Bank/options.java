/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Bank;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class options extends javax.swing.JFrame {

    /**
     * Creates new form options
     */
    public options() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cnic = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Pin = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Bank/background.jpg"))); // NOI18N
        jLabel1.setText("Welcome");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 26)); // NOI18N
        jLabel2.setText("Welcome to The Bank");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 21, 357, 69));

        jButton1.setFont(new java.awt.Font("Arial Black", 1, 21)); // NOI18N
        jButton1.setText("Open a New Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 329, 50));

        jButton2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jButton2.setText("Account Status");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 274, -1, 54));

        jButton3.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jButton3.setText("Deposit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 274, 153, 53));

        jButton4.setFont(new java.awt.Font("Arial Black", 1, 21)); // NOI18N
        jButton4.setText("Withdraw");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(511, 273, 153, 52));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel3.setText("CNIC");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 108, 102, 40));

        cnic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cnicKeyPressed(evt);
            }
        });
        getContentPane().add(cnic, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 109, 261, 45));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setText("PIN Code");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 185, -1, 44));

        Pin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PinKeyPressed(evt);
            }
        });
        getContentPane().add(Pin, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 185, 261, 44));

        jLabel5.setIcon(new javax.swing.ImageIcon("F:\\Study\\Semester 3\\Object Oriented Programming\\JAVA\\Banking System\\src\\Bank\\background.jpg")); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Data().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (cnic.getText().trim().isEmpty() || Pin.getText().trim().isEmpty()) {
            return;
        }
        
        ArrayList<Account> List = new ArrayList<>();
            
            FileInputStream fin;
            ObjectInputStream in;
            
            // DeSerialzing ArrayList
            try{
            fin = new FileInputStream(new File("Accounts.txt"));
            in = new ObjectInputStream(fin);
            
            List = (ArrayList) in.readObject();
            }
            catch(FileNotFoundException e ){
                System.out.println(e);
            }
            catch(IOException e){
                System.out.println(e);
            }
            catch(ClassNotFoundException e){
                System.out.println(e);
            }
            int index=0;
            boolean found=false;
            for (Account account : List) {
             
                if (account.getCnic() == Long.parseLong(cnic.getText()) && account.getPin() == Integer.parseInt(Pin.getText())) {
                    
                    new Deposit(List,index).setVisible(true);
                    this.setVisible(false);
                    found = true;
                    break;
                }
                index++;
           }
            if (!found) {
             JOptionPane.showMessageDialog(options.this, "Invalid Credentials");
            return;
        }
           
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (cnic.getText().trim().isEmpty() || Pin.getText().trim().isEmpty()) {
            return;
        }
        ArrayList<Account> List = new ArrayList<>();
            
            FileInputStream fin;
            ObjectInputStream in;
            
            // DeSerialzing ArrayList
            try{
            fin = new FileInputStream(new File("Accounts.txt"));
            in = new ObjectInputStream(fin);
            
            List = (ArrayList) in.readObject();
            }
            catch(FileNotFoundException e ){
                System.out.println(e);
            }
            catch(IOException e){
                System.out.println(e);
            }
            catch(ClassNotFoundException e){
                System.out.println(e);
            }
            int index=0;
            boolean found=false;
            for (Account account : List) {
             
                if (account.getCnic() == Long.parseLong(cnic.getText()) && account.getPin() == Integer.parseInt(Pin.getText())) {
                    
                    new Withdraw(List,index).setVisible(true);
                    this.setVisible(false);
                    found = true;
                    break;
                }
                index++;
           }
            if (!found) {
             JOptionPane.showMessageDialog(options.this, "Invalid Credentials");
            return;
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (cnic.getText().trim().isEmpty() || Pin.getText().trim().isEmpty()) {
            return;
        }
        ArrayList<Account> List = new ArrayList<>();
            
            FileInputStream fin;
            ObjectInputStream in;
            
            // DeSerialzing ArrayList
            try{
            fin = new FileInputStream(new File("Accounts.txt"));
            in = new ObjectInputStream(fin);
            
            List = (ArrayList) in.readObject();
            }
            catch(FileNotFoundException e ){
                System.out.println(e);
            }
            catch(IOException e){
                System.out.println(e);
            }
            catch(ClassNotFoundException e){
                System.out.println(e);
            }
            int index=0;
            boolean found=false;
            for (Account account : List) {
             
                if (account.getCnic() == Long.parseLong(cnic.getText()) && account.getPin() == Integer.parseInt(Pin.getText())) {
                    
                    new Status(List,index).setVisible(true);
                    this.setVisible(false);
                    found = true;
                    break;
                }
                index++;
           }
            if (!found) {
             JOptionPane.showMessageDialog(options.this, "Invalid Credentials");
            return;
        }
           
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cnicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnicKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        String s = cnic.getText();
        
        if (s.length()>9 && !Character.isISOControl(c)) {
            cnic.setEditable(false);
        }
        else if (Character.isDigit(c) || Character.isISOControl(c)) {
            cnic.setEditable(true);
        }
        else cnic.setEditable(false);
    }//GEN-LAST:event_cnicKeyPressed

    private void PinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PinKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (Character.isDigit(c) || Character.isISOControl(c)) {
            Pin.setEditable(true);
        }
        else Pin.setEditable(false);
    }//GEN-LAST:event_PinKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                new options().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField Pin;
    private javax.swing.JTextField cnic;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
